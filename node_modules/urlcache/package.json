{
  "_args": [
    [
      {
        "raw": "urlcache@~0.6.0",
        "scope": null,
        "escapedName": "urlcache",
        "name": "urlcache",
        "rawSpec": "~0.6.0",
        "spec": ">=0.6.0 <0.7.0",
        "type": "range"
      },
      "D:\\dev\\nightwatch\\node_modules\\nightwatch\\node_modules\\broken-link-checker"
    ]
  ],
  "_from": "urlcache@>=0.6.0 <0.7.0",
  "_id": "urlcache@0.6.0",
  "_inCache": true,
  "_location": "/urlcache",
  "_nodeVersion": "5.5.0",
  "_npmOperationalInternal": {
    "host": "packages-5-east.internal.npmjs.com",
    "tmp": "tmp/urlcache-0.6.0.tgz_1454807051984_0.6924117885064334"
  },
  "_npmUser": {
    "name": "stevenvachon",
    "email": "contact@svachon.com"
  },
  "_npmVersion": "3.3.12",
  "_phantomChildren": {
    "is-object": "1.0.1",
    "is-string": "1.0.4",
    "object-assign": "4.1.1"
  },
  "_requested": {
    "raw": "urlcache@~0.6.0",
    "scope": null,
    "escapedName": "urlcache",
    "name": "urlcache",
    "rawSpec": "~0.6.0",
    "spec": ">=0.6.0 <0.7.0",
    "type": "range"
  },
  "_requiredBy": [
    "/broken-link-checker"
  ],
  "_resolved": "https://registry.npmjs.org/urlcache/-/urlcache-0.6.0.tgz",
  "_shasum": "6ea63562bce0cc821864d4452cfa07f82b02109c",
  "_shrinkwrap": null,
  "_spec": "urlcache@~0.6.0",
  "_where": "D:\\dev\\nightwatch\\node_modules\\nightwatch\\node_modules\\broken-link-checker",
  "author": {
    "name": "Steven Vachon",
    "email": "contact@svachon.com",
    "url": "http://www.svachon.com/"
  },
  "bugs": {
    "url": "https://github.com/stevenvachon/urlcache/issues"
  },
  "dependencies": {
    "urlobj": "0.0.8"
  },
  "description": "URL key-value cache.",
  "devDependencies": {
    "bhttp": "^1.2.1",
    "browserify": "^13.0.0",
    "chai": "^3.5.0",
    "chai-as-promised": "^5.2.0",
    "es6-promise": "^3.0.2",
    "mocha": "^2.4.5",
    "object.assign": "^4.0.3",
    "uglify-js": "^2.6.1"
  },
  "directories": {},
  "dist": {
    "shasum": "6ea63562bce0cc821864d4452cfa07f82b02109c",
    "tarball": "https://registry.npmjs.org/urlcache/-/urlcache-0.6.0.tgz"
  },
  "engines": {
    "node": ">= 4"
  },
  "files": [
    "index.js",
    "license"
  ],
  "gitHead": "002cf6867dde7def5994f0a953627362cacbede8",
  "homepage": "https://github.com/stevenvachon/urlcache",
  "keywords": [
    "cache",
    "uri",
    "url"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "stevenvachon",
      "email": "contact@svachon.com"
    }
  ],
  "name": "urlcache",
  "optionalDependencies": {},
  "readme": "# urlcache [![NPM Version][npm-image]][npm-url] [![Bower Version][bower-image]][bower-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][david-image]][david-url]\n\n> URL key-value cache.\n\n## Installation\n\n[Node.js](http://nodejs.org/) `>= 0.10` is required; `< 4.0` will need an `Object.assign` polyfill. To install, type this at the command line:\n\n```shell\nnpm install urlcache\n```\n\n\n## Constructor\n```js\nvar UrlCache = require(\"urlcache\");\nvar cache = new UrlCache(options);\n```\n\n\n## Methods\n**Note:** all instances of `url` can be either a `String` or a [`url.parse()`](https://nodejs.org/api/url.html#url_url_parse_urlstr_parsequerystring_slashesdenotehost)-compatible `Object`.\n\n### .clear([url])\nRemoves the `url` key-value pair. If the `url` argument is not defined, *all* pairs will be removed.\n\n### .get(url)\nReturns the stored value of `url`. If no such value exists, `undefined` will be returned.\n\n### .length()\nReturns the number of stored key-value pairs.\n\n### .set(url, value[, expiryTime])\nStores `value` (any type) into `url` key. Optionally, define `expiryTime` to override `options.expiryTime`.\n```js\ncache.set(\"url\", {\"key\":\"value\"});\ncache.get(\"url\");  //=> {\"key\":\"value\"}\n\ncache.set(\"url\", new Promise(function(resolve, reject) {\n\t// set value after some delayed event\n\tsetTimeout(function() {\n\t\tresolve(\"value\");\n\t}, 500);\n});\n\nPromise.resolve(cache.get(\"url\")).then(function(value) {\n    console.log(value);  //=> \"value\"\n});\n```\n\n\n## Options\n\n### options.defaultPorts\nType: `Object`  \nDefault value: see [urlobj.parse() options](https://github.com/stevenvachon/urlobj)  \nA map of protocol default ports for `options.normalizeUrls`.\n\n### options.expiryTime\nType: `Number`  \nDefault value: `Infinity`  \nThe number of milliseconds in which a cached value should be considered valid.\n\n### options.normalizeUrls\nType: `Boolean`  \nDefault value: `true`  \nWhen `true`, will remove unnecessary URL parts in order to avoid duplicates in cache.\n\n### options.stripUrlHashes\nType: `Boolean`  \nDefault Value: `true`  \nWhen `true`, will remove `#hashes` from URLs. They are most likely not useful to you because they are local to the document that contains them.\n\n\n## Changelog\n* 0.6.0 added `.length()` and removed `Object.assign()` polyfill\n* 0.5.0 removed use of Promises as they were unnecessary\n* 0.4.0 simpler `Promise`-based API\n* 0.3.0 added `options.defaultPorts`, more tests\n* 0.2.0 simplified API\n* 0.1.0 initial release\n\n\n[npm-image]: https://img.shields.io/npm/v/urlcache.svg\n[npm-url]: https://npmjs.org/package/urlcache\n[bower-image]: https://img.shields.io/bower/v/urlcache.svg\n[bower-url]: https://github.com/stevenvachon/urlcache\n[travis-image]: https://img.shields.io/travis/stevenvachon/urlcache.svg\n[travis-url]: https://travis-ci.org/stevenvachon/urlcache\n[david-image]: https://img.shields.io/david/stevenvachon/urlcache.svg\n[david-url]: https://david-dm.org/stevenvachon/urlcache\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/stevenvachon/urlcache.git"
  },
  "scripts": {
    "browserify": "browserify index.js --standalone UrlCache | uglifyjs --compress --mangle -o index-browser.js",
    "test": "mocha test.js --reporter spec --check-leaks --bail",
    "test-watch": "mocha test.js --reporter spec --check-leaks --bail -w"
  },
  "version": "0.6.0"
}
