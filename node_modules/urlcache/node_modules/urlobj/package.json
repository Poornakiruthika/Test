{
  "_args": [
    [
      {
        "raw": "urlobj@0.0.8",
        "scope": null,
        "escapedName": "urlobj",
        "name": "urlobj",
        "rawSpec": "0.0.8",
        "spec": "0.0.8",
        "type": "version"
      },
      "D:\\dev\\nightwatch\\node_modules\\nightwatch\\node_modules\\urlcache"
    ]
  ],
  "_from": "urlobj@0.0.8",
  "_id": "urlobj@0.0.8",
  "_inCache": true,
  "_location": "/urlcache/urlobj",
  "_nodeVersion": "4.1.1",
  "_npmUser": {
    "name": "stevenvachon",
    "email": "contact@svachon.com"
  },
  "_npmVersion": "2.14.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "urlobj@0.0.8",
    "scope": null,
    "escapedName": "urlobj",
    "name": "urlobj",
    "rawSpec": "0.0.8",
    "spec": "0.0.8",
    "type": "version"
  },
  "_requiredBy": [
    "/urlcache"
  ],
  "_resolved": "https://registry.npmjs.org/urlobj/-/urlobj-0.0.8.tgz",
  "_shasum": "84fda38c2dc867805245c830e5063fb91e026f56",
  "_shrinkwrap": null,
  "_spec": "urlobj@0.0.8",
  "_where": "D:\\dev\\nightwatch\\node_modules\\nightwatch\\node_modules\\urlcache",
  "author": {
    "name": "Steven Vachon",
    "email": "contact@svachon.com",
    "url": "http://www.svachon.com/"
  },
  "bugs": {
    "url": "https://github.com/stevenvachon/urlobj/issues"
  },
  "dependencies": {
    "is-object": "^1.0.1",
    "is-string": "^1.0.4",
    "object-assign": "^4.0.1"
  },
  "description": "Performant utilities for URL resolution and parsing built on core url.",
  "devDependencies": {
    "browserify": "^11.2.0",
    "chai": "^3.3.0",
    "mocha": "^2.3.3",
    "uglify-js": "^2.5.0"
  },
  "directories": {},
  "dist": {
    "shasum": "84fda38c2dc867805245c830e5063fb91e026f56",
    "tarball": "https://registry.npmjs.org/urlobj/-/urlobj-0.0.8.tgz"
  },
  "engines": {
    "node": ">= 0.10"
  },
  "files": [
    "lib",
    "license"
  ],
  "gitHead": "974f44859f24cdd0935239fb682633582c1d1bc3",
  "homepage": "https://github.com/stevenvachon/urlobj",
  "keywords": [
    "uri",
    "url"
  ],
  "license": "MIT",
  "main": "lib",
  "maintainers": [
    {
      "name": "stevenvachon",
      "email": "contact@svachon.com"
    }
  ],
  "name": "urlobj",
  "optionalDependencies": {},
  "readme": "# urlobj [![NPM Version][npm-image]][npm-url] [![Bower Version][bower-image]][bower-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][david-image]][david-url]\n\n> Performant utilities for URL resolution and parsing built on core [url](https://nodejs.org/api/url.html).\n\nThis module provides many tools for working with Objects parsed with [`url.parse()`](https://nodejs.org/api/url.html#url_url_parse_urlstr_parsequerystring_slashesdenotehost). It also performs faster because it avoids the need to constantly reparse URL Strings during multiple operations.\n\n## Constants\n\n### component\nURL components used in comparison operations.\n\n* `component.NOTHING`\n* `component.PROTOCOL` or `components.SCHEME`\n* `component.TLD`\n* `component.DOMAIN`\n* `component.SUB_DOMAIN`\n* `component.HOSTNAME`\n* `component.PORT`\n* `component.HOST`\n* `component.AUTH`\n* `component.DIRECTORY`\n* `component.FILENAME`\n* `component.PATHNAME`\n* `component.QUERY` or `components.SEARCH`\n* `component.PATH`\n* `component.HASH` or `components.FRAGMENT`\n\n```\n                                    HOST                         PATH\n                                   ___|___                 _______|______\n                                  /       \\               /              \\\n               AUTH           HOSTNAME    PORT        PATHNAME          QUERY   HASH\n         _______|_______   ______|______   |   __________|_________   ____|____   |\n        /               \\ /             \\ / \\ /                    \\ /         \\ / \\\n  foo://username:password@www.example.com:123/hello/world/there.html?name=ferret#foo\n  \\_/                     \\_/ \\_____/ \\_/     \\_________/ \\________/\n   |                       |     |     |           |           |\nPROTOCOL              SUB_DOMAIN |    TLD      DIRECTORY   FILENAME\n                                 |\n                              DOMAIN\n```\n\n**Note:** there are a few breaks in the linearity of these values:\n\n* `AUTH` is prioritized *after* `HOST` because matching authentication on a different domain is pointless\n* `TLD` is prioritized *before* `DOMAIN` because matching a domain on a different top-level domain is pointless\n* `SUB_DOMAIN` is prioritized *after* `DOMAIN`\n\n### type\nURL types used for discerning input.\n\n* `type.UNKNOWN`\n* `type.ABSOLUTE`\n* `type.PROTOCOL_RELATIVE`\n* `type.ROOT_RELATIVE`\n* `type.DIRECTORY_RELATIVE`\n* `type.FILENAME_RELATIVE`\n* `type.QUERY_RELATIVE`\n* `type.EMPTY`\n* `type.HASH_RELATIVE`\n\n## Functions\n\nThe following methods will accept URLs as Strings and/or Objects.\n\n### format(urlObj)\nConverts a URL `Object` to a formatted URL `String`. Is merely an alias to core [`url.format()`](https://nodejs.org/api/url.html#url_url_format_urlobj).\n\n### minify(url, options)\nNormalizes and minifies a URL with the following options:\n\n* `clone`; when set to `true`, the function will return a copy of `url` instead of mutating the original.\n* `defaultPorts`; a map of default ports for various protocols. Default value: `{ftp:21, gopher:70, http:80, https:443}`.\n* `directoryIndexes`; a list of filenames that are expected to be treated as directory indexes. Default value: `[\"index.html\"]`.\n* `removeAuth`; when set to `true`, it will remove authentication information. Default value: `false`.\n* `removeDefaultPorts`; when set to `true`, it will remove ports that match any found in `defaultPorts`. Default value: `true`.\n* `removeDirectoryIndexes`; when set to `true`, it will remove filenames that match any found in `directoryIndexes`. Default value: `true`.\n* `removeEmptyQueries`; when set to `true`, it will remove empty query data such as `\"?\"`, `\"?var=\"` and `\"&=\"`. Default value: `false`.\n* `removeRootTrailingSlash`; when set to `true`, it will remove trailing slashes such as `\"http://domain.com/?var\"`. Default value: `true`.\n\nIf `url` is an Object, it will be mutated/modified.\n\n### normalize(url, options)\nResolves dot segments (`\"../\"`, `\"./\"`) in a URL's path, removes port if it is default and removes empty queries (`\"path/?\"`).\n\nOptions:\n\n* `defaultPorts`; a map of default ports for various protocols. Default value: `{ftp:21, gopher:70, http:80, https:443}`.\n* `slashesDenoteHost`; when set to `true`, it will parse `\"//domain.com/\"` as a URL instead of a path. Default value: `false`.\n\nIf `url` is an Object, it will be mutated/modified.\n\n### parse(url, parseQueryString, slashesDenoteHost)\n### parse(url, options)\nParses (or re-parses) a URL into an Object containing its URL components with the following options:\n\n* `defaultPorts`; a map of default ports for various protocols. Default value: `{ftp:21, gopher:70, http:80, https:443}`.\n* `directoryIndexes`; a list of filenames that are expected to be treated as directory indexes. Default value: `[\"index.html\"]`.\n* `parseQueryString`; when set to `true`, it will parse the query string into an object. Default value: `false`.\n* `slashesDenoteHost`; when set to `true`, it will parse `\"//domain.com/\"` as a URL instead of a path. Default value: `false`.\n\nIf `url` is an Object, it will be mutated/modified.\n\n### relation(url1, url2)\nReturns a Number defining the relation between two URLs. That number corresponds to the value of a URL component in [`components`](#components).\n\nBecause the value returned is a Number, more complex comparisons are possible:\n\n```js\nvar relation = urlobj.relation(url1, url2);\n\nif (relation >= urlobj.components.HOST) {\n\tconsole.log(\"same server!\");\n}\n```\n\n### resolve(from, to, options)\nResolves a URL with a base URL like a browser would for an anchor tag. If `to` is an Object, it will be mutated/modified.\n\nOptions:\n\n* `defaultPorts`; a map of default ports for various protocols. Default value: `{ftp:21, gopher:70, http:80, https:443}`.\n* `ignoreWww`; when set to `true`, it will treat `\"www.domain.com\"` and `\"domain.com\"` as the same host. Default value: `false`.\n\n## Exposed Internal Methods\n\n### areSameDir(dirArray1, leadingSlash1, dirArray2, leadingSlash2)\nCompares two directory Arrays to see if their paths are the same. `leadingSlash1` and `leadingSlash2` denote that the corresponding path is absolute and not relative. Input should first be normalized.\n\n### areSameQuery(queryObj1, queryObj2)\nCompares two query Objects to see if their data is the same. Order does not matter.\n\n### joinDirs(dirArray, leadingSlash)\nJoins all directories of a directory Array into a String. `leadingSlash` denotes that the path is absolute and not relative.\n\n### joinQuery(queryObj, skipEmpties)\nJoins all keys of an Object into a query String.\n\nWhen `skipEmpties` is `true`, empty query data such as `\"?var=\"` and `\"&=\"` will be excluded. Its default value is `false`.\n\n### normalizeDirs(dirArray, leadingSlash)\nResolves dot segments (`\"../\"`, `\"./\"`) in a directory Array and returns a new Array (within an Object). `leadingSlash` denotes that the path is absolute and not relative. This method will attempt to resolve to a root. If none is found, the parent-most dot segment will remain.\n\nExamples **using Strings instead of Arrays**:\n\n* Turns `\"/dir1/dir2/../\"` into `\"/dir1/\"`\n* Turns `\"dir/../\"` into `\"\"`\n* Turns `\"/../dir/\"` into `\"/dir/\"`\n* Leaves `\"../dir/\"` untouched\n* Leaves `\"../../dir/\"` untouched\n\n### parsePath(pathString)\nParses a path String into an Object containing a directory Array and a filename String.\n\n### resolveDirs(fromDirArray, fromLeadingSlash, toDirArray, toLeadingSlash)\nResolves a base directory Array to another directory Array and returns a new, normalized Array (within an Object). `fromLeadingSlash` and `toLeadingSlash` denote that the corresponding path is absolute and not relative.\n\n\n[npm-image]: https://img.shields.io/npm/v/urlobj.svg\n[npm-url]: https://npmjs.org/package/urlobj\n[bower-image]: https://img.shields.io/bower/v/urlobj.svg\n[bower-url]: https://github.com/stevenvachon/urlobj\n[travis-image]: https://img.shields.io/travis/stevenvachon/urlobj.svg\n[travis-url]: https://travis-ci.org/stevenvachon/urlobj\n[david-image]: https://img.shields.io/david/stevenvachon/urlobj.svg\n[david-url]: https://david-dm.org/stevenvachon/urlobj\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/stevenvachon/urlobj.git"
  },
  "scripts": {
    "browserify": "browserify lib/ --standalone urlobj | uglifyjs --compress --mangle -o browser/urlobj.js",
    "test": "mocha test/ --reporter spec --check-leaks --bail"
  },
  "version": "0.0.8"
}
