{
  "_args": [
    [
      {
        "raw": "through2-spy@^1.2.0",
        "scope": null,
        "escapedName": "through2-spy",
        "name": "through2-spy",
        "rawSpec": "^1.2.0",
        "spec": ">=1.2.0 <2.0.0",
        "type": "range"
      },
      "D:\\dev\\nightwatch\\node_modules\\nightwatch\\node_modules\\bhttp"
    ]
  ],
  "_from": "through2-spy@>=1.2.0 <2.0.0",
  "_id": "through2-spy@1.2.0",
  "_inCache": true,
  "_location": "/through2-spy",
  "_npmUser": {
    "name": "bryce",
    "email": "bryce@ravenwall.com"
  },
  "_npmVersion": "1.4.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "through2-spy@^1.2.0",
    "scope": null,
    "escapedName": "through2-spy",
    "name": "through2-spy",
    "rawSpec": "^1.2.0",
    "spec": ">=1.2.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/bhttp"
  ],
  "_resolved": "https://registry.npmjs.org/through2-spy/-/through2-spy-1.2.0.tgz",
  "_shasum": "9c891ca9ca40e1e1e4cf31e1ac57f94cc9d248cb",
  "_shrinkwrap": null,
  "_spec": "through2-spy@^1.2.0",
  "_where": "D:\\dev\\nightwatch\\node_modules\\nightwatch\\node_modules\\bhttp",
  "author": {
    "name": "Bryce B. Baril"
  },
  "bugs": {
    "url": "https://github.com/brycebaril/through2-spy/issues"
  },
  "dependencies": {
    "through2": "~0.5.1",
    "xtend": "~3.0.0"
  },
  "description": "A through2 wrapper to for simple stream.PassThrough spies.",
  "devDependencies": {
    "stream-spigot": "~3.0.4",
    "tap": "~0.4.11",
    "tape": "~2.13.3",
    "terminus": "~1.0.10"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "9c891ca9ca40e1e1e4cf31e1ac57f94cc9d248cb",
    "tarball": "https://registry.npmjs.org/through2-spy/-/through2-spy-1.2.0.tgz"
  },
  "homepage": "https://github.com/brycebaril/through2-spy#readme",
  "jshintConfig": {
    "asi": true,
    "globalstrict": true,
    "validthis": true,
    "eqnull": true,
    "node": true,
    "loopfunc": true,
    "newcap": false,
    "eqeqeq": false
  },
  "keywords": [
    "streams",
    "through",
    "through2",
    "passthrough",
    "spy"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "bryce",
      "email": "bryce@ravenwall.com"
    }
  ],
  "name": "through2-spy",
  "optionalDependencies": {},
  "readme": "through2-spy\n============\n\n[![NPM](https://nodei.co/npm/through2-spy.png)](https://nodei.co/npm/through2-spy/)\n\nThis is a super thin wrapper around [through2](http://npm.im/through2) for creating simple stream.PassThrough spies.\n\nSaves you a tiny bit of boilerplate compared to `through2` for writing stream spies.\n\nNote you will **NOT** be able to do anything but spy and abort the stream pipeline. To do any filtering or transformations you should consider `through2` `through2-filter` or `through2-map`.\n\nPass a function to run as each chunk goes through your stream pipeline. Return an Error to abort the pipeline.\n\n```js\n\nvar spy = require(\"through2-spy\")\n\nvar count = 0\nvar countChunks = spy(function (chunk) {\n  count++\n})\n\n// vs. with through2:\nvar countChunks = through2(function (chunk, encoding, callback) {\n  count++\n  this.push(chunk)\n  return callback()\n})\n\n// Then use your spy:\nsource.pipe(countChunks).pipe(sink)\n\n// Additionally accepts `wantStrings` argument to conver buffers into strings\nvar nsaregex = /(open source)|(foss)|(node\\.js)/i\nvar prizm = spy({wantStrings: true}, function (str) {\n  var wiretap = str.match(nsaregex)\n  if (wiretap) this.emit(\"OMGTERRIST\", wiretap[0], str)\n})\n\nprizm.on(\"OMGTERRIST\", sendDrone(/* ... */))\n\ninternet.pipe(prizm).pipe(internet)\n\n// Return an Error to abort the pipeline\nvar Meter = spy.ctor({maxBytes: 1024, bytes: 0}, function (chunk) {\n  this.options.bytes += chunk.length\n  if (this.options.bytes >= this.options.maxBytes) return new Error(\"Over 1024 byte limit!\")\n})\n\nvar meter = new Meter()\n\n```\n\nAPI\n---\n\n`require(\"through2-spy\")([options], fn)`\n---\n\nCreate a `through2-spy` instance that will call `fn(chunk)` and then silently pass through data downstream.\n\n`require(\"through2-spy\").ctor([options], fn)`\n---\n\nCreate a `through2-spy` Type that can be instantiated via `new Type()` or `Type()` to create reusable spies.\n\n`require(\"through2-spy\").obj([options], fn)`\n---\n\nCreate a `through2-spy` that defaults to `objectMode = true`.\n\n`require(\"through2-spy\").objCtor([options], fn)`\n---\n\nCreate a `through2-spy` Type that defaults to `objectMode = true`.\n\nOptions\n-------\n\n  * wantStrings: Automatically call chunk.toString() for the super lazy.\n  * all other through2 options\n\nLICENSE\n=======\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/brycebaril/through2-spy.git"
  },
  "scripts": {
    "test": "tap test/"
  },
  "version": "1.2.0"
}
